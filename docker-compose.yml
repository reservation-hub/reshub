version: "3.7"
volumes:
  postgres-data:
  elasticsearch:

services:
  # server
  server:
    build:
      context: .
      dockerfile: docker/server/Dockerfile
    container_name: reshub
    environment:
      - NODE_ENV=development
      - COMMAND=${COMMAND:-serve}
    env_file:
      - reshub-deploy/.env.dev
    image: reshub:latest
    ports:
      - 8090:8090
      - 5555:5555 # prisma studio port
    volumes:
      - ./app:/app
    tty: true
    depends_on:
      - postgresql

  # prd
  production:
    build:
      context: .
      dockerfile: docker/production/Dockerfile
    container_name: reshub-server_prd
    environment:
      - NODE_ENV=production
      - COMMAND=${COMMAND:-start}
    env_file:
      - reshub-deploy/.env.production
    image: reshub_prd
    ports:
      - 8091:8090
    depends_on:
      - postgresql

  postgresql:
    image: postgres:12
    container_name: reshub-db
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - reshub-deploy/.env.dev

  elasticsearch:
    build:
      context: ./elk/elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  logstash:
    build:
      context: ./elk/logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: ./elk/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

networks:
  es-net:
    driver: bridge
